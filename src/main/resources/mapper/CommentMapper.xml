<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pg.book.dao.CommentMapper">
    <resultMap type="com.pg.book.entity.Comment" id="CommentMap">
        <result property="uuid" column="uuid" jdbcType="VARCHAR"/>
        <result property="parentId" column="parent_id" jdbcType="VARCHAR"/>
        <result property="articleId" column="article_id" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="likeNumber" column="like_number" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="queryAll" resultMap="CommentMap">
        select
        c.*,
        u.username,
        u.head_pic as headPic
        from
        tb_comment c
        LEFT JOIN
        tb_user u
        ON
        c.user_id = u.uuid
        <where>
            <if test="articleId != null and articleId != ''">
                and c.article_id = #{articleId}
            </if>
            <if test="userId != null and userId != ''">
                and c.user_id = #{userId}
            </if>
        </where>
        ORDER BY c.create_time
    </select>

    <insert id="insert">
        insert into  tb_comment(uuid, parent_id, article_id, user_id, like_number, content, create_time)
        values (#{uuid},#{parentId}, #{articleId}, #{userId}, #{likeNumber}, #{content}, #{createTime})
    </insert>

    <delete id="deleteUuid">
        delete from tb_comment where uuid = #{uuid}
    </delete>

    <delete id="deleteParentId">
        delete from tb_comment where parent_id = #{parentId}
    </delete>


</mapper>